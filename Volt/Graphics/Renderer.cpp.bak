#include "Renderer.h"
#include <SDL/SDL.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include "Layer.h"

namespace Volt {

Renderer::Renderer (int w, int h)
    : m_width(w),
      m_height(h) {
}

void Renderer::Render () {
    glViewport(0, 0, m_width, m_height);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0, m_width, m_height, 0, -1.0f, 1.0f);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();

    //m_camera.ApplyViewTransform();

    for (list<Layer*>::iterator i = m_layers.begin(); i != m_layers.end();
         i++) {
        (*i)->Render();
    }

    SDL_GL_SwapBuffers();
}

}

